{"version":3,"file":"catchat.component.js","sourceRoot":"","sources":["catchat.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO;AACP,qBAA0B,eAAe,CAAC,CAAA;AAE1C,eAAe;AACf,6BAAoD,cAAc,CAAC,CAAA;AAInE,uBAAgC,iBAAiB,CAAC,CAAA;AAClD,uBAAmC,UAAU,CAAC,CAAA;AAW9C;IAKE,6BAAmB,EAAe,EAAS,EAAc;QAAtC,OAAE,GAAF,EAAE,CAAa;QAAS,OAAE,GAAF,EAAE,CAAY;QACvD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,EAAC,KAAK,EAAE,EAAC,WAAW,EAAE,CAAC,EAAC,EAAC,CAAC,CAAC;QACzE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;QAEtC,IAAI,CAAC,MAAM,GAAG;YACX,EAAE,EAAE,EAAE;YACN,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;SAC3B,CAAC;IACJ,CAAC;IAED,yCAAW,GAAX,UAAY,OAAe;QACzB,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAG,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;IACpF,CAAC;IA9BH;QAAC,gBAAS,CAAC;YACT,UAAU,EAAE,CAAC,wBAAe,CAAC;YAC7B,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,KAAK,EAAE,CAAC,eAAM,CAAC;YACf,SAAS,EAAE,CAAC,mBAAU,CAAC;YACvB,QAAQ,EAAE,aAAa;YACvB,SAAS,EAAE,CAAC,uBAAuB,CAAC;YACpC,WAAW,EAAE,wBAAwB;SACtC,CAAC;;2BAAA;IAuBF,0BAAC;AAAD,CAAC,AAtBD,IAsBC;AAtBY,2BAAmB,sBAsB/B,CAAA","sourcesContent":["// Core\nimport { Component } from '@angular/core';\n\n// AngularFire2\nimport { AngularFire, FirebaseListObservable } from 'angularfire2';\n\n// Internal\nimport { Author, Message } from './shared/interfaces';\nimport { AvatarComponent } from './shared/avatar';\nimport { Format, CatService } from './shared';\n\n@Component({\n  directives: [AvatarComponent],\n  moduleId: module.id,\n  pipes: [Format],\n  providers: [CatService],\n  selector: 'catchat-app',\n  styleUrls: ['catchat.component.css'],\n  templateUrl: 'catchat.component.html'\n})\nexport class CatchatAppComponent {\n  author: Author;\n  messages: FirebaseListObservable<any[]>;\n  model: string;\n\n  constructor(public af: AngularFire, public cs: CatService) {\n    this.messages = af.database.list('/messages', {query: {limitToLast: 4}});\n    this.model = \"\";\n    \n    let id = Math.ceil(Math.random() * 8);\n    \n    this.author = {\n       id: id,\n       name: this.cs.getName(id)\n    };\n  }\n  \n  sendMessage(message: string) {\n    let m = this.model;\n    this.model = \"\";\n    return this.af.database.list('/messages').push({ author : this.author, text: m });\n  }\n}"]}