{"version":3,"file":"format.pipe.js","sourceRoot":"","sources":["format.pipe.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAoC,eAAe,CAAC,CAAA;AAKpD;IAEE;IACA,CAAC;IAED,0BAAS,GAAT,UAAU,KAAU,EAAE,MAAc;QAClC,EAAE,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;QACpB,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC;QACC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAGD,4BAAW,GAAX,UAAY,QAAgB;QAC1B,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,MAAM,GAAG,EAAE,CAAC;QAEhB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACtC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACrC,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IAChC,CAAC;IAED,wBAAO,GAAP,UAAQ,IAAY;QAClB,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAC7B,KAAK,GAAG,CAAC;YACT,KAAK,GAAG,CAAC;YACT,KAAK,GAAG;gBACN,MAAM,CAAC,MAAM,CAAC;YAChB,KAAK,GAAG,CAAC;YACT,KAAK,GAAG,CAAC;YACT,KAAK,GAAG;gBACN,MAAM,CAAC,MAAM,CAAC;YAChB,KAAK,GAAG,CAAC;YACT,KAAK,GAAG,CAAC;YACT,KAAK,GAAG;gBACN,MAAM,CAAC,OAAO,CAAC;YACjB,KAAK,GAAG,CAAC;YACT,KAAK,GAAG,CAAC;YACT,KAAK,GAAG;gBACN,MAAM,CAAC,KAAK,CAAC;YACf,KAAK,GAAG,CAAC;YACT,KAAK,GAAG,CAAC;YACT,KAAK,GAAG;gBACN,MAAM,CAAC,OAAO,CAAC;YACjB,KAAK,GAAG,CAAC;YACT,KAAK,GAAG,CAAC;YACT,KAAK,GAAG;gBACN,MAAM,CAAC,SAAS,CAAC;YACnB,KAAK,GAAG,CAAC;YACT,KAAK,GAAG,CAAC;YACT,KAAK,GAAG;gBACN,MAAM,CAAC,QAAQ,CAAC;YAClB,KAAK,GAAG,CAAC;YACT,KAAK,GAAG,CAAC;YACT,KAAK,GAAG;gBACN,MAAM,CAAC,MAAM,CAAC;YAChB,KAAK,GAAG,CAAC;YACT,KAAK,GAAG;gBACN,MAAM,CAAC,MAAM,CAAC;YAChB;gBACE,MAAM,CAAC,UAAU,CAAC;QACtB,CAAC;IACH,CAAC;IAvEH;QAAC,WAAI,CAAC;YACJ,IAAI,EAAE,QAAQ;SACf,CAAC;;cAAA;IAsEF,aAAC;AAAD,CAAC,AArED,IAqEC;AArEY,cAAM,SAqElB,CAAA","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'format',\n})\nexport class Format implements PipeTransform {\n  \n  constructor(){\n  }\n  \n  transform(value: any, format: string): string {\n    if (format === \"name\") {\n      return value.name;\n    }\n    if (format === \"cat\") {\n      return this.getSentence(value); \n  }\n    return \"N/A\";\n  }\n  \n  \n  getSentence(sentence: string) : string {\n    let words = sentence.split(\" \");\n    let output = [];\n\n    for (var i = 0; i < words.length; i++) {\n      output[i] = this.getWord(words[i]);\n    }\n\n    return output.join(\" \") + \"!\";\n  }\n\n  getWord(word: string) : string {\n    let letter = word.slice(0,1);\n    switch (letter.toLowerCase()) {\n      case \"a\":\n      case \"b\":\n      case \"c\":\n        return \"meow\";\n      case \"d\":\n      case \"e\":\n      case \"f\":\n        return \"purr\";\n      case \"g\":\n      case \"h\":\n      case \"i\":\n        return \"reeow\";\n      case \"j\":\n      case \"k\":\n      case \"l\":\n        return \"mew\";\n      case \"m\":\n      case \"n\":\n      case \"o\":\n        return \"mreep\";\n      case \"p\":\n      case \"q\":\n      case \"r\":\n        return \"mer ROW\";\n      case \"s\":\n      case \"t\":\n      case \"u\":\n        return \"merrow\";\n      case \"v\":\n      case \"w\":\n      case \"x\":\n        return \"myup\";\n      case \"y\":\n      case \"z\":\n        return \"woof\";\n      default:\n        return \"MRREEEOW\";\n    }\n  }\n}"]}